const db = require("../config/database");
const jwt = require("jsonwebtoken");

// Middleware x√°c th·ª±c JWT
const verifyToken = (req, res, next) => {
    const token = req.header("Authorization");
    if (!token) return res.status(401).json({ message: "Kh√¥ng c√≥ token!" });

    jwt.verify(token.replace("Bearer ", ""), process.env.JWT_SECRET, (err, decoded) => {
        if (err) return res.status(403).json({ message: "Token kh√¥ng h·ª£p l·ªá!" });

        console.log("üîç Token decoded:", decoded); // Ki·ªÉm tra token c√≥ g√¨
        req.user = decoded;

        next();
    });
};


// C·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n
const updateUser = (req, res) => {
    const { TenKH, SDT, Email, NgaySinh, DiaChi } = req.body;
    const MaKH = req.user.MaKH; // üëÄ MaKH l·∫•y t·ª´ token

    console.log("üîç MaKH t·ª´ token:", MaKH); // Ki·ªÉm tra MaKH c√≥ ƒë√∫ng kh√¥ng

    if (!MaKH) {
        return res.status(400).json({ message: "Kh√¥ng t√¨m th·∫•y MaKH trong token!" });
    }

    const sql = `UPDATE khachhang SET TenKH=?, SDT=?, Email=?, NgaySinh=?, DiaChi=? WHERE MaKH=?`;
    db.query(sql, [TenKH, SDT, Email, NgaySinh, DiaChi, MaKH], (err, result) => {
        if (err) return res.status(500).json({ message: "L·ªói c·∫≠p nh·∫≠t!", error: err });

        console.log("‚úÖ K·∫øt qu·∫£ MySQL:", result);

        if (result.affectedRows === 0) {
            return res.status(400).json({ message: "Kh√¥ng c√≥ d·ªØ li·ªáu n√†o ƒë∆∞·ª£c c·∫≠p nh·∫≠t. Ki·ªÉm tra l·∫°i MaKH!" });
        }

        res.json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng!", data: req.body });
    });
};



module.exports = { updateUser, verifyToken };
